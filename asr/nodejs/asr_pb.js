// source: asr.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
goog.exportSymbol('proto.smartspeech.recognition.v1.Hints', null, global);
goog.exportSymbol('proto.smartspeech.recognition.v1.Hypothesis', null, global);
goog.exportSymbol('proto.smartspeech.recognition.v1.RecognitionOptions', null, global);
goog.exportSymbol('proto.smartspeech.recognition.v1.RecognitionOptions.AudioEncoding', null, global);
goog.exportSymbol('proto.smartspeech.recognition.v1.RecognitionRequest', null, global);
goog.exportSymbol('proto.smartspeech.recognition.v1.RecognitionRequest.RequestCase', null, global);
goog.exportSymbol('proto.smartspeech.recognition.v1.RecognitionResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartspeech.recognition.v1.RecognitionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.smartspeech.recognition.v1.RecognitionRequest.oneofGroups_);
};
goog.inherits(proto.smartspeech.recognition.v1.RecognitionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartspeech.recognition.v1.RecognitionRequest.displayName = 'proto.smartspeech.recognition.v1.RecognitionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartspeech.recognition.v1.RecognitionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.smartspeech.recognition.v1.RecognitionResponse.repeatedFields_, null);
};
goog.inherits(proto.smartspeech.recognition.v1.RecognitionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartspeech.recognition.v1.RecognitionResponse.displayName = 'proto.smartspeech.recognition.v1.RecognitionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartspeech.recognition.v1.Hints = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.smartspeech.recognition.v1.Hints.repeatedFields_, null);
};
goog.inherits(proto.smartspeech.recognition.v1.Hints, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartspeech.recognition.v1.Hints.displayName = 'proto.smartspeech.recognition.v1.Hints';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartspeech.recognition.v1.RecognitionOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartspeech.recognition.v1.RecognitionOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartspeech.recognition.v1.RecognitionOptions.displayName = 'proto.smartspeech.recognition.v1.RecognitionOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartspeech.recognition.v1.Hypothesis = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartspeech.recognition.v1.Hypothesis, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartspeech.recognition.v1.Hypothesis.displayName = 'proto.smartspeech.recognition.v1.Hypothesis';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.smartspeech.recognition.v1.RecognitionRequest.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.smartspeech.recognition.v1.RecognitionRequest.RequestCase = {
  REQUEST_NOT_SET: 0,
  OPTIONS: 1,
  AUDIO_CHUNK: 2
};

/**
 * @return {proto.smartspeech.recognition.v1.RecognitionRequest.RequestCase}
 */
proto.smartspeech.recognition.v1.RecognitionRequest.prototype.getRequestCase = function() {
  return /** @type {proto.smartspeech.recognition.v1.RecognitionRequest.RequestCase} */(jspb.Message.computeOneofCase(this, proto.smartspeech.recognition.v1.RecognitionRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartspeech.recognition.v1.RecognitionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.smartspeech.recognition.v1.RecognitionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartspeech.recognition.v1.RecognitionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartspeech.recognition.v1.RecognitionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    options: (f = msg.getOptions()) && proto.smartspeech.recognition.v1.RecognitionOptions.toObject(includeInstance, f),
    audioChunk: msg.getAudioChunk_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartspeech.recognition.v1.RecognitionRequest}
 */
proto.smartspeech.recognition.v1.RecognitionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartspeech.recognition.v1.RecognitionRequest;
  return proto.smartspeech.recognition.v1.RecognitionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartspeech.recognition.v1.RecognitionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartspeech.recognition.v1.RecognitionRequest}
 */
proto.smartspeech.recognition.v1.RecognitionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.smartspeech.recognition.v1.RecognitionOptions;
      reader.readMessage(value,proto.smartspeech.recognition.v1.RecognitionOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAudioChunk(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartspeech.recognition.v1.RecognitionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartspeech.recognition.v1.RecognitionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartspeech.recognition.v1.RecognitionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartspeech.recognition.v1.RecognitionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.smartspeech.recognition.v1.RecognitionOptions.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional RecognitionOptions options = 1;
 * @return {?proto.smartspeech.recognition.v1.RecognitionOptions}
 */
proto.smartspeech.recognition.v1.RecognitionRequest.prototype.getOptions = function() {
  return /** @type{?proto.smartspeech.recognition.v1.RecognitionOptions} */ (
    jspb.Message.getWrapperField(this, proto.smartspeech.recognition.v1.RecognitionOptions, 1));
};


/**
 * @param {?proto.smartspeech.recognition.v1.RecognitionOptions|undefined} value
 * @return {!proto.smartspeech.recognition.v1.RecognitionRequest} returns this
*/
proto.smartspeech.recognition.v1.RecognitionRequest.prototype.setOptions = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.smartspeech.recognition.v1.RecognitionRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartspeech.recognition.v1.RecognitionRequest} returns this
 */
proto.smartspeech.recognition.v1.RecognitionRequest.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartspeech.recognition.v1.RecognitionRequest.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes audio_chunk = 2;
 * @return {!(string|Uint8Array)}
 */
proto.smartspeech.recognition.v1.RecognitionRequest.prototype.getAudioChunk = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes audio_chunk = 2;
 * This is a type-conversion wrapper around `getAudioChunk()`
 * @return {string}
 */
proto.smartspeech.recognition.v1.RecognitionRequest.prototype.getAudioChunk_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAudioChunk()));
};


/**
 * optional bytes audio_chunk = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAudioChunk()`
 * @return {!Uint8Array}
 */
proto.smartspeech.recognition.v1.RecognitionRequest.prototype.getAudioChunk_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getAudioChunk()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.smartspeech.recognition.v1.RecognitionRequest} returns this
 */
proto.smartspeech.recognition.v1.RecognitionRequest.prototype.setAudioChunk = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.smartspeech.recognition.v1.RecognitionRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.smartspeech.recognition.v1.RecognitionRequest} returns this
 */
proto.smartspeech.recognition.v1.RecognitionRequest.prototype.clearAudioChunk = function() {
  return jspb.Message.setOneofField(this, 2, proto.smartspeech.recognition.v1.RecognitionRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartspeech.recognition.v1.RecognitionRequest.prototype.hasAudioChunk = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.smartspeech.recognition.v1.RecognitionResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartspeech.recognition.v1.RecognitionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.smartspeech.recognition.v1.RecognitionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartspeech.recognition.v1.RecognitionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartspeech.recognition.v1.RecognitionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    proto.smartspeech.recognition.v1.Hypothesis.toObject, includeInstance),
    eou: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartspeech.recognition.v1.RecognitionResponse}
 */
proto.smartspeech.recognition.v1.RecognitionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartspeech.recognition.v1.RecognitionResponse;
  return proto.smartspeech.recognition.v1.RecognitionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartspeech.recognition.v1.RecognitionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartspeech.recognition.v1.RecognitionResponse}
 */
proto.smartspeech.recognition.v1.RecognitionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.smartspeech.recognition.v1.Hypothesis;
      reader.readMessage(value,proto.smartspeech.recognition.v1.Hypothesis.deserializeBinaryFromReader);
      msg.addResult(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEou(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartspeech.recognition.v1.RecognitionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartspeech.recognition.v1.RecognitionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartspeech.recognition.v1.RecognitionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartspeech.recognition.v1.RecognitionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.smartspeech.recognition.v1.Hypothesis.serializeBinaryToWriter
    );
  }
  f = message.getEou();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * repeated Hypothesis result = 1;
 * @return {!Array<!proto.smartspeech.recognition.v1.Hypothesis>}
 */
proto.smartspeech.recognition.v1.RecognitionResponse.prototype.getResultList = function() {
  return /** @type{!Array<!proto.smartspeech.recognition.v1.Hypothesis>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.smartspeech.recognition.v1.Hypothesis, 1));
};


/**
 * @param {!Array<!proto.smartspeech.recognition.v1.Hypothesis>} value
 * @return {!proto.smartspeech.recognition.v1.RecognitionResponse} returns this
*/
proto.smartspeech.recognition.v1.RecognitionResponse.prototype.setResultList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.smartspeech.recognition.v1.Hypothesis=} opt_value
 * @param {number=} opt_index
 * @return {!proto.smartspeech.recognition.v1.Hypothesis}
 */
proto.smartspeech.recognition.v1.RecognitionResponse.prototype.addResult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.smartspeech.recognition.v1.Hypothesis, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.smartspeech.recognition.v1.RecognitionResponse} returns this
 */
proto.smartspeech.recognition.v1.RecognitionResponse.prototype.clearResultList = function() {
  return this.setResultList([]);
};


/**
 * optional bool eou = 2;
 * @return {boolean}
 */
proto.smartspeech.recognition.v1.RecognitionResponse.prototype.getEou = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.smartspeech.recognition.v1.RecognitionResponse} returns this
 */
proto.smartspeech.recognition.v1.RecognitionResponse.prototype.setEou = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.smartspeech.recognition.v1.Hints.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartspeech.recognition.v1.Hints.prototype.toObject = function(opt_includeInstance) {
  return proto.smartspeech.recognition.v1.Hints.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartspeech.recognition.v1.Hints} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartspeech.recognition.v1.Hints.toObject = function(includeInstance, msg) {
  var f, obj = {
    wordsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    enableLetters: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    eou: (f = msg.getEou()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartspeech.recognition.v1.Hints}
 */
proto.smartspeech.recognition.v1.Hints.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartspeech.recognition.v1.Hints;
  return proto.smartspeech.recognition.v1.Hints.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartspeech.recognition.v1.Hints} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartspeech.recognition.v1.Hints}
 */
proto.smartspeech.recognition.v1.Hints.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addWords(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableLetters(value);
      break;
    case 3:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setEou(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartspeech.recognition.v1.Hints.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartspeech.recognition.v1.Hints.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartspeech.recognition.v1.Hints} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartspeech.recognition.v1.Hints.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWordsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getEnableLetters();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getEou();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
};


/**
 * repeated string words = 1;
 * @return {!Array<string>}
 */
proto.smartspeech.recognition.v1.Hints.prototype.getWordsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.smartspeech.recognition.v1.Hints} returns this
 */
proto.smartspeech.recognition.v1.Hints.prototype.setWordsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.smartspeech.recognition.v1.Hints} returns this
 */
proto.smartspeech.recognition.v1.Hints.prototype.addWords = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.smartspeech.recognition.v1.Hints} returns this
 */
proto.smartspeech.recognition.v1.Hints.prototype.clearWordsList = function() {
  return this.setWordsList([]);
};


/**
 * optional bool enable_letters = 2;
 * @return {boolean}
 */
proto.smartspeech.recognition.v1.Hints.prototype.getEnableLetters = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.smartspeech.recognition.v1.Hints} returns this
 */
proto.smartspeech.recognition.v1.Hints.prototype.setEnableLetters = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional google.protobuf.Duration eou = 3;
 * @return {?proto.google.protobuf.Duration}
 */
proto.smartspeech.recognition.v1.Hints.prototype.getEou = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 3));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.smartspeech.recognition.v1.Hints} returns this
*/
proto.smartspeech.recognition.v1.Hints.prototype.setEou = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartspeech.recognition.v1.Hints} returns this
 */
proto.smartspeech.recognition.v1.Hints.prototype.clearEou = function() {
  return this.setEou(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartspeech.recognition.v1.Hints.prototype.hasEou = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartspeech.recognition.v1.RecognitionOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.smartspeech.recognition.v1.RecognitionOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartspeech.recognition.v1.RecognitionOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartspeech.recognition.v1.RecognitionOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    audioEncoding: jspb.Message.getFieldWithDefault(msg, 1, 0),
    sampleRate: jspb.Message.getFieldWithDefault(msg, 2, 0),
    language: jspb.Message.getFieldWithDefault(msg, 3, ""),
    model: jspb.Message.getFieldWithDefault(msg, 4, ""),
    hypothesesCount: jspb.Message.getFieldWithDefault(msg, 5, 0),
    hints: (f = msg.getHints()) && proto.smartspeech.recognition.v1.Hints.toObject(includeInstance, f),
    enableProfanityFilter: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    enableMultiUtterance: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    enablePartialResults: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    noSpeechTimeout: (f = msg.getNoSpeechTimeout()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    maxSpeechTimeout: (f = msg.getMaxSpeechTimeout()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartspeech.recognition.v1.RecognitionOptions}
 */
proto.smartspeech.recognition.v1.RecognitionOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartspeech.recognition.v1.RecognitionOptions;
  return proto.smartspeech.recognition.v1.RecognitionOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartspeech.recognition.v1.RecognitionOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartspeech.recognition.v1.RecognitionOptions}
 */
proto.smartspeech.recognition.v1.RecognitionOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.smartspeech.recognition.v1.RecognitionOptions.AudioEncoding} */ (reader.readEnum());
      msg.setAudioEncoding(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSampleRate(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguage(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setModel(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHypothesesCount(value);
      break;
    case 6:
      var value = new proto.smartspeech.recognition.v1.Hints;
      reader.readMessage(value,proto.smartspeech.recognition.v1.Hints.deserializeBinaryFromReader);
      msg.setHints(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableProfanityFilter(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableMultiUtterance(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnablePartialResults(value);
      break;
    case 10:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setNoSpeechTimeout(value);
      break;
    case 11:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setMaxSpeechTimeout(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartspeech.recognition.v1.RecognitionOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartspeech.recognition.v1.RecognitionOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartspeech.recognition.v1.RecognitionOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartspeech.recognition.v1.RecognitionOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAudioEncoding();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getSampleRate();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getLanguage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getModel();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getHypothesesCount();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getHints();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.smartspeech.recognition.v1.Hints.serializeBinaryToWriter
    );
  }
  f = message.getEnableProfanityFilter();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getEnableMultiUtterance();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getEnablePartialResults();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getNoSpeechTimeout();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getMaxSpeechTimeout();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.smartspeech.recognition.v1.RecognitionOptions.AudioEncoding = {
  RESERVED: 0,
  PCM_S16LE: 1,
  OPUS: 2
};

/**
 * optional AudioEncoding audio_encoding = 1;
 * @return {!proto.smartspeech.recognition.v1.RecognitionOptions.AudioEncoding}
 */
proto.smartspeech.recognition.v1.RecognitionOptions.prototype.getAudioEncoding = function() {
  return /** @type {!proto.smartspeech.recognition.v1.RecognitionOptions.AudioEncoding} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.smartspeech.recognition.v1.RecognitionOptions.AudioEncoding} value
 * @return {!proto.smartspeech.recognition.v1.RecognitionOptions} returns this
 */
proto.smartspeech.recognition.v1.RecognitionOptions.prototype.setAudioEncoding = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional int32 sample_rate = 2;
 * @return {number}
 */
proto.smartspeech.recognition.v1.RecognitionOptions.prototype.getSampleRate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.smartspeech.recognition.v1.RecognitionOptions} returns this
 */
proto.smartspeech.recognition.v1.RecognitionOptions.prototype.setSampleRate = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string language = 3;
 * @return {string}
 */
proto.smartspeech.recognition.v1.RecognitionOptions.prototype.getLanguage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartspeech.recognition.v1.RecognitionOptions} returns this
 */
proto.smartspeech.recognition.v1.RecognitionOptions.prototype.setLanguage = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string model = 4;
 * @return {string}
 */
proto.smartspeech.recognition.v1.RecognitionOptions.prototype.getModel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartspeech.recognition.v1.RecognitionOptions} returns this
 */
proto.smartspeech.recognition.v1.RecognitionOptions.prototype.setModel = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 hypotheses_count = 5;
 * @return {number}
 */
proto.smartspeech.recognition.v1.RecognitionOptions.prototype.getHypothesesCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.smartspeech.recognition.v1.RecognitionOptions} returns this
 */
proto.smartspeech.recognition.v1.RecognitionOptions.prototype.setHypothesesCount = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional Hints hints = 6;
 * @return {?proto.smartspeech.recognition.v1.Hints}
 */
proto.smartspeech.recognition.v1.RecognitionOptions.prototype.getHints = function() {
  return /** @type{?proto.smartspeech.recognition.v1.Hints} */ (
    jspb.Message.getWrapperField(this, proto.smartspeech.recognition.v1.Hints, 6));
};


/**
 * @param {?proto.smartspeech.recognition.v1.Hints|undefined} value
 * @return {!proto.smartspeech.recognition.v1.RecognitionOptions} returns this
*/
proto.smartspeech.recognition.v1.RecognitionOptions.prototype.setHints = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartspeech.recognition.v1.RecognitionOptions} returns this
 */
proto.smartspeech.recognition.v1.RecognitionOptions.prototype.clearHints = function() {
  return this.setHints(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartspeech.recognition.v1.RecognitionOptions.prototype.hasHints = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool enable_profanity_filter = 7;
 * @return {boolean}
 */
proto.smartspeech.recognition.v1.RecognitionOptions.prototype.getEnableProfanityFilter = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.smartspeech.recognition.v1.RecognitionOptions} returns this
 */
proto.smartspeech.recognition.v1.RecognitionOptions.prototype.setEnableProfanityFilter = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool enable_multi_utterance = 8;
 * @return {boolean}
 */
proto.smartspeech.recognition.v1.RecognitionOptions.prototype.getEnableMultiUtterance = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.smartspeech.recognition.v1.RecognitionOptions} returns this
 */
proto.smartspeech.recognition.v1.RecognitionOptions.prototype.setEnableMultiUtterance = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional bool enable_partial_results = 9;
 * @return {boolean}
 */
proto.smartspeech.recognition.v1.RecognitionOptions.prototype.getEnablePartialResults = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.smartspeech.recognition.v1.RecognitionOptions} returns this
 */
proto.smartspeech.recognition.v1.RecognitionOptions.prototype.setEnablePartialResults = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional google.protobuf.Duration no_speech_timeout = 10;
 * @return {?proto.google.protobuf.Duration}
 */
proto.smartspeech.recognition.v1.RecognitionOptions.prototype.getNoSpeechTimeout = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 10));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.smartspeech.recognition.v1.RecognitionOptions} returns this
*/
proto.smartspeech.recognition.v1.RecognitionOptions.prototype.setNoSpeechTimeout = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartspeech.recognition.v1.RecognitionOptions} returns this
 */
proto.smartspeech.recognition.v1.RecognitionOptions.prototype.clearNoSpeechTimeout = function() {
  return this.setNoSpeechTimeout(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartspeech.recognition.v1.RecognitionOptions.prototype.hasNoSpeechTimeout = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional google.protobuf.Duration max_speech_timeout = 11;
 * @return {?proto.google.protobuf.Duration}
 */
proto.smartspeech.recognition.v1.RecognitionOptions.prototype.getMaxSpeechTimeout = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 11));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.smartspeech.recognition.v1.RecognitionOptions} returns this
*/
proto.smartspeech.recognition.v1.RecognitionOptions.prototype.setMaxSpeechTimeout = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartspeech.recognition.v1.RecognitionOptions} returns this
 */
proto.smartspeech.recognition.v1.RecognitionOptions.prototype.clearMaxSpeechTimeout = function() {
  return this.setMaxSpeechTimeout(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartspeech.recognition.v1.RecognitionOptions.prototype.hasMaxSpeechTimeout = function() {
  return jspb.Message.getField(this, 11) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartspeech.recognition.v1.Hypothesis.prototype.toObject = function(opt_includeInstance) {
  return proto.smartspeech.recognition.v1.Hypothesis.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartspeech.recognition.v1.Hypothesis} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartspeech.recognition.v1.Hypothesis.toObject = function(includeInstance, msg) {
  var f, obj = {
    text: jspb.Message.getFieldWithDefault(msg, 1, ""),
    normalizedText: jspb.Message.getFieldWithDefault(msg, 2, ""),
    start: (f = msg.getStart()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    end: (f = msg.getEnd()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartspeech.recognition.v1.Hypothesis}
 */
proto.smartspeech.recognition.v1.Hypothesis.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartspeech.recognition.v1.Hypothesis;
  return proto.smartspeech.recognition.v1.Hypothesis.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartspeech.recognition.v1.Hypothesis} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartspeech.recognition.v1.Hypothesis}
 */
proto.smartspeech.recognition.v1.Hypothesis.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNormalizedText(value);
      break;
    case 3:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setStart(value);
      break;
    case 4:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setEnd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartspeech.recognition.v1.Hypothesis.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartspeech.recognition.v1.Hypothesis.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartspeech.recognition.v1.Hypothesis} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartspeech.recognition.v1.Hypothesis.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNormalizedText();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStart();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getEnd();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
};


/**
 * optional string text = 1;
 * @return {string}
 */
proto.smartspeech.recognition.v1.Hypothesis.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartspeech.recognition.v1.Hypothesis} returns this
 */
proto.smartspeech.recognition.v1.Hypothesis.prototype.setText = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string normalized_text = 2;
 * @return {string}
 */
proto.smartspeech.recognition.v1.Hypothesis.prototype.getNormalizedText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartspeech.recognition.v1.Hypothesis} returns this
 */
proto.smartspeech.recognition.v1.Hypothesis.prototype.setNormalizedText = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional google.protobuf.Duration start = 3;
 * @return {?proto.google.protobuf.Duration}
 */
proto.smartspeech.recognition.v1.Hypothesis.prototype.getStart = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 3));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.smartspeech.recognition.v1.Hypothesis} returns this
*/
proto.smartspeech.recognition.v1.Hypothesis.prototype.setStart = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartspeech.recognition.v1.Hypothesis} returns this
 */
proto.smartspeech.recognition.v1.Hypothesis.prototype.clearStart = function() {
  return this.setStart(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartspeech.recognition.v1.Hypothesis.prototype.hasStart = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Duration end = 4;
 * @return {?proto.google.protobuf.Duration}
 */
proto.smartspeech.recognition.v1.Hypothesis.prototype.getEnd = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 4));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.smartspeech.recognition.v1.Hypothesis} returns this
*/
proto.smartspeech.recognition.v1.Hypothesis.prototype.setEnd = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartspeech.recognition.v1.Hypothesis} returns this
 */
proto.smartspeech.recognition.v1.Hypothesis.prototype.clearEnd = function() {
  return this.setEnd(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartspeech.recognition.v1.Hypothesis.prototype.hasEnd = function() {
  return jspb.Message.getField(this, 4) != null;
};


goog.object.extend(exports, proto.smartspeech.recognition.v1);
